pool:
  vmImage: 'ubuntu-latest'

variables:
  emsdk_tag: 1.39.13
  qt_branch: 5.15.0

jobs:
- job: QtWasm
  timeoutInMinutes: 180
  steps:
  - task: Cache@2
    inputs:
      key: wasm_qt | "$(emsdk_tag)" | "$(qt_branch)"
      path: $(Build.SourcesDirectory)/qt5
      cacheHitVar: WASM_QT_CACHE_RESTORED

  - script: |
      sudo apt-get update
      sudo apt-get install -y --reinstall ca-certificates
      DEBIAN_FRONTEND=noninteractive sudo apt-get install --no-install-recommends -y pkg-config g++ automake autoconf git python3 python3-distutils xz-utils bzip2 libtool make libicu-dev libxml2 curl libtolua-dev
      git clone https://github.com/emscripten-core/emsdk
      ./emsdk/emsdk install $(EMSDK_TAG)
      ./emsdk/emsdk activate $(EMSDK_TAG)

  - script: |
      source ./emsdk/emsdk_env.sh
      git clone https://github.com/qt/qtbase qtbase --depth=1 --branch=$(QT_BRANCH)
      mkdir -p qtbuild
      pushd qtbuild
      ../qtbase/configure -xplatform wasm-emscripten -nomake examples -prefix $(Build.SourcesDirectory)/qt5 -opensource -confirm-license
      make install
      popd
    timeoutInMinutes: 120
    condition: ne(variables.WASM_QT_CACHE_RESTORED, 'true')

  - script: |
      source ./emsdk/emsdk_env.sh
      emconfigure ./autogen.sh --enable-client=qt --disable-nls --with-qt5=$(Build.SourcesDirectory)/qt5
      emmake make

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: 'client/?(*.html|*.data|*.js|*.wasm)'
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: qtwasm
